% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/return_distinct.R
\name{return_distinct}
\alias{return_distinct}
\title{Return number of unique values mid-dplyr chain}
\usage{
return_distinct(
  data,
  x,
  append_to = NULL,
  name_to_append = NULL,
  global_obj = NULL
)
}
\arguments{
\item{data}{A data frame or tibble}

\item{x}{The variable from \code{data} that requires a count of unique
values.}

\item{append_to}{The name of a list in the global environment
to which the count will be appended. If a list named \code{append_to}
does not exist in the global environment, one is created.}

\item{name_to_append}{The name of the list item which is appended to
\code{append_to}}

\item{global_obj}{The name of a global object to return the count to.
If \code{global_obj} is used, \code{append_to} and \code{name_to_append}
are ignored.}
}
\value{
Returns the left-hand side of the pipe to the current
dplyr chain, while also returning counts to the global environment
}
\description{
This function is designed to be inserted into a dplyr chain
when you want to return a count of unique values for a given
variable to the global environment without breaking the chain.
There are options to append the count to a list in the global
environment, or to add a new object to the global environment
which contains the count.
}
\examples{
palmerpenguins::penguins \%>\%
  return_distinct(species, counts, "species_overall") \%>\%
  dplyr::filter(island == "Biscoe") \%>\%
  return_distinct(species, counts, "species_biscoe")
}
